{"ast":null,"code":"var _jsxFileName = \"/Users/eduardo/Documents/miInversion/react-app/myapp/src/js/components/Form.jsx\";\n// src/js/components/Form.jsx\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addArticle } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: article => dispatch(addArticle(article))\n  };\n}\n\nclass ConnectedForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const title = this.state.title;\n    const id = uuidv1(); // let's add a check for forbidden words\n\n    const forbiddenWords = ['spam', 'money'];\n    const foundWord = forbiddenWords.filter(word => title.includes(word));\n\n    if (foundWord) {\n      return this.props.titleForbidden();\n    }\n\n    this.props.addArticle({\n      title,\n      id\n    });\n    this.setState({\n      title: \"\"\n    });\n  }\n\n  render() {\n    const title = this.state.title;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"SAVE\"));\n  }\n\n} // first argument for connect must be null \n\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\nexport default Form;","map":{"version":3,"sources":["/Users/eduardo/Documents/miInversion/react-app/myapp/src/js/components/Form.jsx"],"names":["React","Component","connect","uuidv1","addArticle","mapDispatchToProps","dispatch","article","ConnectedForm","constructor","state","title","handleChange","bind","handleSubmit","event","setState","target","id","value","preventDefault","forbiddenWords","foundWord","filter","word","includes","props","titleForbidden","render","Form"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,MAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLF,IAAAA,UAAU,EAAEG,OAAO,IAAID,QAAQ,CAACF,UAAU,CAACG,OAAD,CAAX;AAD1B,GAAP;AAGD;;AACD,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AACpCQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAE,OAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,KAAd;AACD;;AACDL,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACK,cAAN;AADkB,UAEVT,KAFU,GAEA,KAAKD,KAFL,CAEVC,KAFU;AAGlB,UAAMO,EAAE,GAAGf,MAAM,EAAjB,CAHkB,CAIlB;;AACA,UAAMkB,cAAc,GAAG,CAAC,MAAD,EAAS,OAAT,CAAvB;AACA,UAAMC,SAAS,GAAGD,cAAc,CAACE,MAAf,CAAsBC,IAAI,IAAIb,KAAK,CAACc,QAAN,CAAeD,IAAf,CAA9B,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACb,aAAO,KAAKI,KAAL,CAAWC,cAAX,EAAP;AACD;;AACD,SAAKD,KAAL,CAAWtB,UAAX,CAAsB;AAAEO,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAAtB;AACA,SAAKF,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAd;AACD;;AACDiB,EAAAA,MAAM,GAAG;AAAA,UACCjB,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,KAAK,EAAEH,KAJT;AAKE,MAAA,QAAQ,EAAE,KAAKC,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAiBD;;AA5CmC,C,CA8CtC;;;AACA,MAAMiB,IAAI,GAAG3B,OAAO,CAAC,IAAD,EAAOG,kBAAP,CAAP,CAAkCG,aAAlC,CAAb;AACA,eAAeqB,IAAf","sourcesContent":["// src/js/components/Form.jsx\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addArticle } from \"../actions/index\";\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: article => dispatch(addArticle(article))\n  };\n}\nclass ConnectedForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title } = this.state;\n    const id = uuidv1();\n    // let's add a check for forbidden words\n    const forbiddenWords = ['spam', 'money'];\n    const foundWord = forbiddenWords.filter(word => title.includes(word) )\n    if (foundWord) {\n      return this.props.titleForbidden();\n    }\n    this.props.addArticle({ title, id });\n    this.setState({ title: \"\" });\n  }\n  render() {\n    const { title } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-success btn-lg\">\n          SAVE\n        </button>\n      </form>\n    );\n  }\n}\n// first argument for connect must be null \nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\nexport default Form;"]},"metadata":{},"sourceType":"module"}